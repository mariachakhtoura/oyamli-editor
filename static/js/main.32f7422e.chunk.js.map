{"version":3,"sources":["scripts/loadJQuery.js","components/CustomAudioPlayer.jsx","components/CustomTextarea.jsx","components/Shell.jsx","App.jsx","index.js"],"names":["loadJQuery","callback","script","document","createElement","src","body","appendChild","onload","CustomAudioPlayer","transmitPlayerRef","className","onPause","e","target","currentTime","ref","el","autoPlayAfterSrcChange","customProgressBarSection","RHAP_UI","MAIN_CONTROLS","CURRENT_TIME","PROGRESS_BAR","DURATION","customControlsSection","customAdditionalControls","progressJumpSteps","backward","forward","CustomTextarea","editor","ClassicEditor","data","onReady","console","log","onChange","event","getData","onBlur","onFocus","Shell","audioPlayer","uploadInputElement","useState","file","setFile","audioSrc","setAudioSrc","showAudioPlayer","setShowAudioPlayer","youtubeUrl","setYoutubeUrl","tabIndex","onKeyDown","code","audio","current","paused","play","pause","id","type","accept","files","length","uploadedFile","URL","createObjectURL","value","url","match","replace","toast","error","title","frameBorder","App","useEffect","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"iNAWeA,G,YAXI,SAACC,GAClB,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IACL,mEACFF,SAASG,KAAKC,YAAYL,GAC1BA,EAAOM,OAAS,WACVP,GAAUA,KAEZA,GAAUA,M,8BC2BDQ,EA/BW,SAAC,GAAgC,IAA9BJ,EAA6B,EAA7BA,IAAKK,EAAwB,EAAxBA,kBAChC,OACE,cAAC,IAAD,CACEL,IAAKA,EACLM,UAAU,cAEVC,QAAS,SAACC,GACRA,EAAEC,OAAOC,YAAcF,EAAEC,OAAOC,YAAc,GAEhDC,IAAK,SAACC,GACJP,EAAkBO,IAEpBC,wBAAwB,EACxBC,yBAA0B,CACxBC,IAAQC,cACRD,IAAQE,aACRF,IAAQG,aACRH,IAAQI,UAEVC,sBAAuB,GACvBC,yBAA0B,GAC1BC,kBAAmB,CAAEC,SAAU,IAAMC,QAAS,Q,yBCGrCC,EAvBQ,WACrB,OACE,cAAC,WAAD,CACEC,OAAQC,IACRC,KAAK,gCACLC,QAAS,SAACH,GAERI,QAAQC,IAAI,0BAA2BL,IAEzCM,SAAU,SAACC,EAAOP,GAChB,IAAME,EAAOF,EAAOQ,UACpBJ,QAAQC,IAAI,CAAEE,QAAOP,SAAQE,UAE/BO,OAAQ,SAACF,EAAOP,GACdI,QAAQC,IAAI,QAASL,IAEvBU,QAAS,SAACH,EAAOP,GACfI,QAAQC,IAAI,SAAUL,OC0GfW,MAzHf,WACE,IAAIC,EACAC,EAFW,EAGSC,qBAHT,mBAGRC,EAHQ,KAGFC,EAHE,OAIiBF,qBAJjB,mBAIRG,EAJQ,KAIEC,EAJF,OAK+BJ,oBAAS,GALxC,mBAKRK,EALQ,KAKSC,EALT,OAMqBN,mBAAS,IAN9B,mBAMRO,EANQ,KAMIC,EANJ,KA4Df,OACE,mCACE,sBAAKC,SAAS,IAAI3C,UAAU,MAAM4C,UA5Cf,SAACjB,GAClBQ,IACiB,WAAfR,EAAMkB,KACJb,EAAYc,MAAMC,QAAQC,OAC5BhB,EAAYc,MAAMC,QAAQE,QAE1BjB,EAAYc,MAAMC,QAAQG,QAC1BlB,EAAYc,MAAMC,QAAQ3C,YACxB4B,EAAYc,MAAMC,QAAQ3C,YAAc,GAEpB,OAAfuB,EAAMkB,KACfb,EAAYc,MAAMC,QAAQ3C,YACxB4B,EAAYc,MAAMC,QAAQ3C,YAAc,EAClB,OAAfuB,EAAMkB,OACfb,EAAYc,MAAMC,QAAQ3C,YACxB4B,EAAYc,MAAMC,QAAQ3C,YAAc,KA6B5C,UACE,sBAAKJ,UAAU,kBAAf,UACE,uBACEA,UAAU,QACVmD,GAAG,aACHC,KAAK,OACLC,OAAO,4CACP3B,SA7DW,SAACC,GACpB,GAAIA,EAAMxB,OAAOmD,OAAS3B,EAAMxB,OAAOmD,MAAMC,OAAS,EAAG,CACvDb,EAAc,IACdF,GAAmB,GACnB,IAAMgB,EAAe7B,EAAMxB,OAAOmD,MAAM,GACxClB,EAAQoB,GACRlB,EAAYmB,IAAIC,gBAAgBF,MAwD1BnD,IAAK,SAACC,GACJ2B,EAAqB3B,KAGzB,gCACE,sBAAMN,UAAU,WAAhB,wCACA,uBACEA,UAAU,QACVmD,GAAG,YACHC,KAAK,OACLO,MAAOlB,EACPG,UA3CM,SAACjB,GACjB,IACkB,UAAfA,EAAMkB,MAAmC,gBAAflB,EAAMkB,OAClB,KAAfJ,EACA,CACA,IACMmB,EAAMjC,EAAMxB,OAAOwD,MACrBC,EAAIC,MAFgB,4EAGtBrB,GAAmB,GACnBE,EAAckB,EAAIE,QAAQ,WAAY,WACtC7B,EAAmB0B,MAAQ,GAC3B1B,EAAmBE,KAAO,IAE1B4B,IAAMC,MAAM,yBA+BNtC,SA1BY,SAACC,GACvBe,EAAcf,EAAMxB,OAAOwD,aA4BpBpB,EACC,qCACE,cAAC,EAAD,CACE7C,IAAK2C,EACLtC,kBAAmB,SAACO,GAClB0B,EAAc1B,KAGjB6B,GACC,sBAAKnC,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,gBACA,qBAAKA,UAAU,eAAf,iBACA,qBAAKA,UAAU,kBAAf,sBAKN,qBAAKA,UAAU,iBAAf,SACE,wBACEA,UAAU,eACVmD,GAAG,SACHc,MAAM,aACNb,KAAK,YACL1D,IAAK+C,EACLyB,YAAY,WAMpB,cAAC,EAAD,U,MCzFOC,MAzBf,WAOE,OANAC,qBAAU,WACR/E,GAAW,kBAMX,qCACE,cAAC,EAAD,IACA,cAAC,IAAD,CACEgF,SAAS,aACTC,UAAW,IACXC,iBAAe,EACfC,aAAW,EACXC,cAAY,EACZC,WAAS,EACTC,cAAY,QCnBpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtF,SAASuF,eAAe,W","file":"static/js/main.32f7422e.chunk.js","sourcesContent":["const loadJQuery = (callback) => {\r\n  const script = document.createElement('script');\r\n  script.src =\r\n    'https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js';\r\n  document.body.appendChild(script);\r\n  script.onload = () => {\r\n    if (callback) callback();\r\n  };\r\n  if (callback) callback();\r\n};\r\n\r\nexport default loadJQuery;\r\n","import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport AudioPlayer, { RHAP_UI } from 'react-h5-audio-player';\r\n\r\nconst CustomAudioPlayer = ({ src, transmitPlayerRef }) => {\r\n  return (\r\n    <AudioPlayer\r\n      src={src}\r\n      className=\"audioplayer\"\r\n      // onPlay={e => console.log(\"onPlay\")}\r\n      onPause={(e) => {\r\n        e.target.currentTime = e.target.currentTime - 1;\r\n      }}\r\n      ref={(el) => {\r\n        transmitPlayerRef(el);\r\n      }}\r\n      autoPlayAfterSrcChange={false}\r\n      customProgressBarSection={[\r\n        RHAP_UI.MAIN_CONTROLS,\r\n        RHAP_UI.CURRENT_TIME,\r\n        RHAP_UI.PROGRESS_BAR,\r\n        RHAP_UI.DURATION,\r\n      ]}\r\n      customControlsSection={[]}\r\n      customAdditionalControls={[]}\r\n      progressJumpSteps={{ backward: 2000, forward: 2000 }}\r\n      // customIcons={{\r\n      //   play: <PlayButton />,\r\n      //   rewind: <RewindButton />,\r\n      //   forward: <ForwardButton />,\r\n      // }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomAudioPlayer;\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@mariachakhtoura/yamli-custom-ckeditor/build/ckeditor.js';\r\n\r\nconst CustomTextarea = () => {\r\n  return (\r\n    <CKEditor\r\n      editor={ClassicEditor}\r\n      data=\"<p>Hello from CKEditor 5!</p>\"\r\n      onReady={(editor) => {\r\n        // You can store the \"editor\" and use when it is needed.\r\n        console.log('Editor is ready to use!', editor);\r\n      }}\r\n      onChange={(event, editor) => {\r\n        const data = editor.getData();\r\n        console.log({ event, editor, data });\r\n      }}\r\n      onBlur={(event, editor) => {\r\n        console.log('Blur.', editor);\r\n      }}\r\n      onFocus={(event, editor) => {\r\n        console.log('Focus.', editor);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomTextarea;\r\n","import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport CustomAudioPlayer from './CustomAudioPlayer';\r\nimport CustomTextarea from './CustomTextarea';\r\nimport AudioPlayer, { RHAP_UI } from 'react-h5-audio-player';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Shell() {\r\n  let audioPlayer;\r\n  let uploadInputElement;\r\n  const [file, setFile] = useState();\r\n  const [audioSrc, setAudioSrc] = useState();\r\n  const [showAudioPlayer, setShowAudioPlayer] = useState(true);\r\n  const [youtubeUrl, setYoutubeUrl] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      setYoutubeUrl('');\r\n      setShowAudioPlayer(true);\r\n      const uploadedFile = event.target.files[0];\r\n      setFile(uploadedFile);\r\n      setAudioSrc(URL.createObjectURL(uploadedFile));\r\n    }\r\n  };\r\n\r\n  const handleEscPress = (event) => {\r\n    if (file) {\r\n      if (event.code === 'Escape') {\r\n        if (audioPlayer.audio.current.paused) {\r\n          audioPlayer.audio.current.play();\r\n        } else {\r\n          audioPlayer.audio.current.pause();\r\n          audioPlayer.audio.current.currentTime =\r\n            audioPlayer.audio.current.currentTime - 1;\r\n        }\r\n      } else if (event.code === 'F1') {\r\n        audioPlayer.audio.current.currentTime =\r\n          audioPlayer.audio.current.currentTime - 2;\r\n      } else if (event.code === 'F2') {\r\n        audioPlayer.audio.current.currentTime =\r\n          audioPlayer.audio.current.currentTime + 2;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUrl = (event) => {\r\n    if (\r\n      (event.code === 'Enter' || event.code === 'NumpadEnter') &&\r\n      youtubeUrl !== ''\r\n    ) {\r\n      const validationRegEx = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\\\&v=|\\?v=)([^#\\\\&\\\\?]*).*/;\r\n      const url = event.target.value;\r\n      if (url.match(validationRegEx)) {\r\n        setShowAudioPlayer(false);\r\n        setYoutubeUrl(url.replace('watch?v=', 'embed/'));\r\n        uploadInputElement.value = '';\r\n        uploadInputElement.file = '';\r\n      } else {\r\n        toast.error('Invalid youtube URL');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUrlChange = (event) => {\r\n    setYoutubeUrl(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div tabIndex=\"0\" className=\"App\" onKeyDown={handleEscPress}>\r\n        <div className=\"audio_container\">\r\n          <input\r\n            className=\"input\"\r\n            id=\"audio_file\"\r\n            type=\"file\"\r\n            accept=\".mp3, .m4a, .flac, .mp4, .wav, .wma, .aac\"\r\n            onChange={handleChange}\r\n            ref={(el) => {\r\n              uploadInputElement = el;\r\n            }}\r\n          />\r\n          <div>\r\n            <span className=\"urllabel\">or enter Youtube video URL</span>\r\n            <input\r\n              className=\"input\"\r\n              id=\"audio_url\"\r\n              type=\"text\"\r\n              value={youtubeUrl}\r\n              onKeyDown={handleUrl}\r\n              onChange={handleUrlChange}\r\n            />\r\n          </div>\r\n          {showAudioPlayer ? (\r\n            <>\r\n              <CustomAudioPlayer\r\n                src={audioSrc}\r\n                transmitPlayerRef={(el) => {\r\n                  audioPlayer = el;\r\n                }}\r\n              />\r\n              {file && (\r\n                <div className=\"shortcuts\">\r\n                  <div className=\"rewindshortcut\">F1</div>\r\n                  <div className=\"playshortcut\">Esc</div>\r\n                  <div className=\"forwardshortcut\">F2</div>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div className=\"player-wrapper\">\r\n              <iframe\r\n                className=\"react-player\"\r\n                id=\"player\"\r\n                title=\"url-player\"\r\n                type=\"text/html\"\r\n                src={youtubeUrl}\r\n                frameBorder=\"0\"\r\n              ></iframe>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* <textarea id=\"yamli_textbox_id\"></textarea> */}\r\n        <CustomTextarea />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Shell;\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport loadJQuery from './scripts/loadJQuery.js';\nimport 'react-h5-audio-player/lib/styles.css';\nimport { ToastContainer } from 'react-toastify';\nimport Shell from './components/Shell';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  useEffect(() => {\n    loadJQuery(() => {\n      // setLoaded(true);\n    });\n  });\n\n  return (\n    <>\n      <Shell />\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop\n        closeOnClick\n        draggable\n        pauseOnHover\n        // toastClassName=\"toastClass\"\n        // bodyClassName=\"bodyToastClass\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}