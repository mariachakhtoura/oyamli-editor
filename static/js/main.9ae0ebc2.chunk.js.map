{"version":3,"sources":["scripts/loadJQuery.js","components/CustomAudioPlayer.jsx","components/CustomTextarea.jsx","components/Shell.jsx","App.jsx","index.js"],"names":["loadJQuery","callback","script","document","createElement","src","body","appendChild","onload","CustomAudioPlayer","transmitPlayerRef","className","onPause","e","target","currentTime","ref","el","autoPlayAfterSrcChange","customProgressBarSection","RHAP_UI","MAIN_CONTROLS","CURRENT_TIME","PROGRESS_BAR","DURATION","customControlsSection","customAdditionalControls","progressJumpSteps","backward","forward","CustomTextarea","editor","ClassicEditor","data","onReady","onChange","event","getData","fetch","headers","referrer","then","response","json","matchedData","toString","match","length","arabicChoices","totalChoices","queryText","console","log","onBlur","onFocus","Shell","audioPlayer","uploadInputElement","useState","file","setFile","audioSrc","setAudioSrc","showAudioPlayer","setShowAudioPlayer","youtubeUrl","setYoutubeUrl","tabIndex","onKeyDown","code","audio","current","paused","play","pause","id","type","accept","files","uploadedFile","URL","createObjectURL","value","url","replace","toast","error","title","frameBorder","App","useEffect","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9ae0ebc2.chunk.js","sourcesContent":["const loadJQuery = (callback) => {\r\n  const script = document.createElement('script');\r\n  script.src =\r\n    'https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js';\r\n  document.body.appendChild(script);\r\n  script.onload = () => {\r\n    if (callback) callback();\r\n  };\r\n  if (callback) callback();\r\n};\r\n\r\nexport default loadJQuery;\r\n","import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport AudioPlayer, { RHAP_UI } from 'react-h5-audio-player';\r\n\r\nconst CustomAudioPlayer = ({ src, transmitPlayerRef }) => {\r\n  return (\r\n    <AudioPlayer\r\n      src={src}\r\n      className=\"audioplayer\"\r\n      // onPlay={e => console.log(\"onPlay\")}\r\n      onPause={(e) => {\r\n        e.target.currentTime = e.target.currentTime - 1;\r\n      }}\r\n      ref={(el) => {\r\n        transmitPlayerRef(el);\r\n      }}\r\n      autoPlayAfterSrcChange={false}\r\n      customProgressBarSection={[\r\n        RHAP_UI.MAIN_CONTROLS,\r\n        RHAP_UI.CURRENT_TIME,\r\n        RHAP_UI.PROGRESS_BAR,\r\n        RHAP_UI.DURATION,\r\n      ]}\r\n      customControlsSection={[]}\r\n      customAdditionalControls={[]}\r\n      progressJumpSteps={{ backward: 2000, forward: 2000 }}\r\n      // customIcons={{\r\n      //   play: <PlayButton />,\r\n      //   rewind: <RewindButton />,\r\n      //   forward: <ForwardButton />,\r\n      // }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomAudioPlayer;\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@mariachakhtoura/yamli-custom-ckeditor/build/ckeditor.js';\r\n\r\nconst CustomTextarea = () => {\r\n  return (\r\n    <CKEditor\r\n      editor={ClassicEditor}\r\n      data=\"<p>Hello from CKEditor 5!</p>\"\r\n      onReady={(editor) => {}}\r\n      onChange={(event, editor) => {\r\n        const data = editor.getData();\r\n        fetch(\r\n          `https://api.yamli.com/transliterate.ashx?word=${'s'}&tool=api&account_id=000006&prot=https%3A&hostname=www.yamli.com&path=%2Farabic-keyboard%2F&build=5515&sxhr_id=15`,\r\n          {\r\n            headers: {\r\n              'Accept-Language': 'en-US,en;q=0.5',\r\n              'Accept-Encoding': 'gzip, deflate, br',\r\n              'Access-Control-Allow-Origin': '*',\r\n            },\r\n            referrer: 'https://www.yamli.com/arabic-keyboard/',\r\n          }\r\n        )\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            let items;\r\n            const matchedData = response\r\n              .toString()\r\n              .match(/(?<=\\{\"data\":\")(.*?)(?=\",\")/);\r\n            if (matchedData && matchedData.length > 0) {\r\n              // const itemObjects = JSON.parse( matchedData[ 0 ] );\r\n              // const rItems = JSON.parse( itemObjects.data ).r;\r\n              const rItems = matchedData[0];\r\n              const arabicChoices = rItems.match(/[\\u0621-\\u064A ]+/g);\r\n              const totalChoices = [queryText, ...arabicChoices];\r\n              // console.log( arabicChoices );\r\n              console.log(totalChoices);\r\n            } else {\r\n              console.log([]);\r\n            }\r\n          });\r\n      }}\r\n      onBlur={(event, editor) => {}}\r\n      onFocus={(event, editor) => {}}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomTextarea;\r\n","import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport CustomAudioPlayer from './CustomAudioPlayer';\r\nimport CustomTextarea from './CustomTextarea';\r\nimport AudioPlayer, { RHAP_UI } from 'react-h5-audio-player';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Shell() {\r\n  let audioPlayer;\r\n  let uploadInputElement;\r\n  const [file, setFile] = useState();\r\n  const [audioSrc, setAudioSrc] = useState();\r\n  const [showAudioPlayer, setShowAudioPlayer] = useState(true);\r\n  const [youtubeUrl, setYoutubeUrl] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      setYoutubeUrl('');\r\n      setShowAudioPlayer(true);\r\n      const uploadedFile = event.target.files[0];\r\n      setFile(uploadedFile);\r\n      setAudioSrc(URL.createObjectURL(uploadedFile));\r\n    }\r\n  };\r\n\r\n  const handleEscPress = (event) => {\r\n    if (file) {\r\n      if (event.code === 'Escape') {\r\n        if (audioPlayer.audio.current.paused) {\r\n          audioPlayer.audio.current.play();\r\n        } else {\r\n          audioPlayer.audio.current.pause();\r\n          audioPlayer.audio.current.currentTime =\r\n            audioPlayer.audio.current.currentTime - 1;\r\n        }\r\n      } else if (event.code === 'F1') {\r\n        audioPlayer.audio.current.currentTime =\r\n          audioPlayer.audio.current.currentTime - 2;\r\n      } else if (event.code === 'F2') {\r\n        audioPlayer.audio.current.currentTime =\r\n          audioPlayer.audio.current.currentTime + 2;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUrl = (event) => {\r\n    if (\r\n      (event.code === 'Enter' || event.code === 'NumpadEnter') &&\r\n      youtubeUrl !== ''\r\n    ) {\r\n      const validationRegEx = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\\\&v=|\\?v=)([^#\\\\&\\\\?]*).*/;\r\n      const url = event.target.value;\r\n      if (url.match(validationRegEx)) {\r\n        setShowAudioPlayer(false);\r\n        setYoutubeUrl(url.replace('watch?v=', 'embed/'));\r\n        uploadInputElement.value = '';\r\n        uploadInputElement.file = '';\r\n      } else {\r\n        toast.error('Invalid youtube URL');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUrlChange = (event) => {\r\n    setYoutubeUrl(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div tabIndex=\"0\" className=\"App\" onKeyDown={handleEscPress}>\r\n        <div className=\"audio_container\">\r\n          <input\r\n            className=\"input\"\r\n            id=\"audio_file\"\r\n            type=\"file\"\r\n            accept=\".mp3, .m4a, .flac, .mp4, .wav, .wma, .aac\"\r\n            onChange={handleChange}\r\n            ref={(el) => {\r\n              uploadInputElement = el;\r\n            }}\r\n          />\r\n          <div>\r\n            <span className=\"urllabel\">or enter Youtube video URL</span>\r\n            <input\r\n              className=\"input\"\r\n              id=\"audio_url\"\r\n              type=\"text\"\r\n              value={youtubeUrl}\r\n              onKeyDown={handleUrl}\r\n              onChange={handleUrlChange}\r\n            />\r\n          </div>\r\n          {showAudioPlayer ? (\r\n            <>\r\n              <CustomAudioPlayer\r\n                src={audioSrc}\r\n                transmitPlayerRef={(el) => {\r\n                  audioPlayer = el;\r\n                }}\r\n              />\r\n              {file && (\r\n                <div className=\"shortcuts\">\r\n                  <div className=\"rewindshortcut\">F1</div>\r\n                  <div className=\"playshortcut\">Esc</div>\r\n                  <div className=\"forwardshortcut\">F2</div>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div className=\"player-wrapper\">\r\n              <iframe\r\n                className=\"react-player\"\r\n                id=\"player\"\r\n                title=\"url-player\"\r\n                type=\"text/html\"\r\n                src={youtubeUrl}\r\n                frameBorder=\"0\"\r\n              ></iframe>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* <textarea id=\"yamli_textbox_id\"></textarea> */}\r\n        <CustomTextarea />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Shell;\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport loadJQuery from './scripts/loadJQuery.js';\nimport 'react-h5-audio-player/lib/styles.css';\nimport { ToastContainer } from 'react-toastify';\nimport Shell from './components/Shell';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  useEffect(() => {\n    loadJQuery(() => {\n      // setLoaded(true);\n    });\n  });\n\n  return (\n    <>\n      <Shell />\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop\n        closeOnClick\n        draggable\n        pauseOnHover\n        // toastClassName=\"toastClass\"\n        // bodyClassName=\"bodyToastClass\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}